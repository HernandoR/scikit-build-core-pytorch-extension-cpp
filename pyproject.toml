[build-system]
requires = ["scikit-build-core>=0.1.0","torch","nvidia-cuda-nvcc-cu12","nvidia-cuda-runtime-cu11","nvidia-cuda-nvrtc-cu12","nvidia-cublas-cu12","nvidia-nvml-dev-cu11"]
build-backend = "scikit_build_core.build"

[project]
name = "scikit-build-core-pytorch-extension-cpp"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "torch>=2.6.0"
]
[project.optional-dependencies]
all = [
    "nvidia-cuda-nvcc-cu12",
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-nvjitlink-cu12>=12.3",
]


[tool.scikit-build]
# enable debug
wheel.expand-macos-universal-tags = true
minimum-version = "build-system.requires"

# [tool.uv]
# no-build-isolation=true

[[tool.uv.index]]

name = "tuna"
url = "https://mirrors.tuna.tsinghua.edu.cn/pypi/web/simple/"
default=true


[tool.ruff.lint]
extend-select = [
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
ignore = [
  "PLR09",    # Too many X
  "PLR2004",  # Magic comparison
]
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20"]